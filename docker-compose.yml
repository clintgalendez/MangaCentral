version: '3.8'

services:
  frontend:
    build: ./frontend
    container_name: manga_central_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app 
      - /app/node_modules 
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=5173
    command: npm run dev -- --host
    networks:
      - manga_network

  user-service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    command: sh -c "pip install -r requirements.txt && python manage.py migrate && gunicorn project_user.wsgi:application --bind 0.0.0.0:8000 --reload"
    volumes:
      - ./user_service:/app 
    ports:
      - "8001:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_USER_SERVICE_SECRET_KEY}
      - DEBUG=${DEBUG}
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 user-service # Updated to user-service
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=mysql_db
      - MYSQL_PORT=3306
    depends_on:
      - mysql_db
    container_name: manga_central_user-service # Updated container name
    restart: unless-stopped
    networks:
      - manga_network

  bookmark_manager_service:
    build:
      context: ./bookmark_manager_service
      dockerfile: Dockerfile
    command: sh -c "pip install -r requirements.txt && python manage.py migrate && gunicorn project_bookmark.wsgi:application --bind 0.0.0.0:8000 --reload"
    volumes:
      - ./bookmark_manager_service:/app 
      - bookmark_media:/app/media   
    ports:
      - "8002:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_BOOKMARK_SERVICE_SECRET_KEY}
      - DEBUG=${DEBUG}
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 bookmark_manager_service
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=mysql_db
      - MYSQL_PORT=3306
      - USER_SERVICE_VALIDATE_TOKEN_URL=http://user-service:8000/api/user/me/ # Updated to user-service
    depends_on:
      - mysql_db
    container_name: manga_central_bookmark_service
    restart: unless-stopped
    networks:
      - manga_network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    container_name: manga_central_redis
    restart: unless-stopped
    networks:
      - manga_network

  celery_worker:
    build:
      context: ./bookmark_manager_service
      dockerfile: Dockerfile
    command: celery -A project_bookmark worker --loglevel=info
    volumes:
      - ./bookmark_manager_service:/app
      - bookmark_media:/app/media
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_BOOKMARK_SERVICE_SECRET_KEY}
      - DEBUG=${DEBUG}
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 bookmark_manager_service
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=mysql_db
      - MYSQL_PORT=3306
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - mysql_db
      - redis
    container_name: manga_central_celery_worker
    restart: unless-stopped
    networks:
      - manga_network

  mysql_db:
    image: mysql:8.0
    ports:
      - "3307:3306" 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    container_name: manga_central_mysql_db
    restart: unless-stopped
    networks:
      - manga_network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  bookmark_media:

networks:
  manga_network:
    driver: bridge